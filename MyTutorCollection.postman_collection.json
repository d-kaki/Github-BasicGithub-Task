{
	"info": {
		"_postman_id": "2c3e9f3f-0275-4db3-b981-32a1f074189a",
		"name": "MyTutorCollection",
		"description": "For collection of my own examples during tutorial training",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25896363"
	},
	"item": [
		{
			"name": "All my GET Request",
			"item": [
				{
					"name": "example.com",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "My-Own-Header",
								"value": "Postman Revision"
							}
						],
						"url": {
							"raw": "example.com ",
							"host": [
								"example",
								"com "
							]
						}
					},
					"response": []
				},
				{
					"name": "Postman Logo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.getpostman.com/img/v2/logo-glyph.png",
							"protocol": "https",
							"host": [
								"www",
								"getpostman",
								"com"
							],
							"path": [
								"img",
								"v2",
								"logo-glyph.png"
							]
						}
					},
					"response": []
				},
				{
					"name": "https://www.getpostman.com/img/v2/logo-glyph.png",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://www.getpostman.com/img/v2/logo-glyph.png",
							"protocol": "https",
							"host": [
								"www",
								"getpostman",
								"com"
							],
							"path": [
								"img",
								"v2",
								"logo-glyph.png"
							]
						}
					},
					"response": []
				},
				{
					"name": "https://www.getpostman.com/img/v2/logo-glyph.png",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://www.getpostman.com/img/v2/logo-glyph.png",
							"protocol": "https",
							"host": [
								"www",
								"getpostman",
								"com"
							],
							"path": [
								"img",
								"v2",
								"logo-glyph.png"
							]
						}
					},
					"response": []
				},
				{
					"name": "https://api.getpostman.com/collections/47d18cb4-485f-4e02-b4e3-fd1a1c033833?apikey=1df3dbbf91dd4da5ae640ca98e4f8585",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.getpostman.com/collections/47d18cb4-485f-4e02-b4e3-fd1a1c033833?apikey=1df3dbbf91dd4da5ae640ca98e4f8585",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"collections",
								"47d18cb4-485f-4e02-b4e3-fd1a1c033833"
							],
							"query": [
								{
									"key": "apikey",
									"value": "1df3dbbf91dd4da5ae640ca98e4f8585"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "All my POST Request",
			"item": [
				{
					"name": "example.com with POST",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "My-Own-Header",
								"value": "Postman Revision"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "Firstname",
									"value": "Ibironke Yekinni",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "example.com ",
							"host": [
								"example",
								"com "
							]
						}
					},
					"response": []
				},
				{
					"name": "https://www.getpostman.com/img/v2/logo-glyph.png",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"name": "Content-Type",
								"value": "application/json",
								"disabled": false
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"ibironke\",\n    \"level\": \"400Level\",\n    \"department\": \"Computer Science\"\n}"
						},
						"url": {
							"raw": "https://www.getpostman.com/img/v2/logo-glyph.png",
							"protocol": "https",
							"host": [
								"www",
								"getpostman",
								"com"
							],
							"path": [
								"img",
								"v2",
								"logo-glyph.png"
							]
						}
					},
					"response": []
				},
				{
					"name": "https://www.getpostman.com/img/v2/logo-glyph.png",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"name": "Content-Type",
								"value": "application/json",
								"disabled": false
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"ibironke\",\n    \"level\": \"400Level\",\n    \"department\": \"Computer Science\"\n}"
						},
						"url": {
							"raw": "https://www.getpostman.com/img/v2/logo-glyph.png",
							"protocol": "https",
							"host": [
								"www",
								"getpostman",
								"com"
							],
							"path": [
								"img",
								"v2",
								"logo-glyph.png"
							]
						}
					},
					"response": []
				},
				{
					"name": "https://www.getpostman.com/img/v2/logo-glyph.png",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"name": "Content-Type",
								"value": "application/json",
								"disabled": false
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"ibironke\",\n    \"level\": \"400Level\",\n    \"department\": \"Computer Science\"\n}"
						},
						"url": {
							"raw": "https://www.getpostman.com/img/v2/logo-glyph.png",
							"protocol": "https",
							"host": [
								"www",
								"getpostman",
								"com"
							],
							"path": [
								"img",
								"v2",
								"logo-glyph.png"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Trello",
			"item": [
				{
					"name": "Testing",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Board name should be: 'Ibironke Board (2)'\"), function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.value).to.eql('Ibironke Board (2)');",
									"};"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://api.trello.com/1/boards/?name=Ibironke Board (2)&key=cb4b4021f8d3faa976f51fbfd3a31246&token=e0ac336a8fd917ee73aaa3f315a799be0a03959088132df90511108e92ba58c9&defaultLists=false",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "Ibironke Board (2)"
								},
								{
									"key": "key",
									"value": "cb4b4021f8d3faa976f51fbfd3a31246"
								},
								{
									"key": "token",
									"value": "e0ac336a8fd917ee73aaa3f315a799be0a03959088132df90511108e92ba58c9"
								},
								{
									"key": "defaultLists",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cottytalk Demo 1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/cards/5ad9ff5e43d49ec760adbdc5?key={{API_key}}&token={{API_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards",
								"5ad9ff5e43d49ec760adbdc5"
							],
							"query": [
								{
									"key": "key",
									"value": "{{API_key}}"
								},
								{
									"key": "token",
									"value": "{{API_token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Module 3 Petstore API",
			"item": [
				{
					"name": "Finds Pets by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.test(\"Response time is less than 200ms\", function () {\r",
									"        pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"    });\r",
									"    var jsonObject = xml2Json(responseBody);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "read:pets write:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "available",
									"description": "(Required) Status values that need to be considered for filter"
								},
								{
									"key": "status",
									"value": "available",
									"description": "(Required) Status values that need to be considered for filter"
								}
							]
						},
						"description": "MODULE 3; TASK 6"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByStatus"
									],
									"query": [
										{
											"key": "status",
											"value": "available"
										},
										{
											"key": "status",
											"value": "available"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"<string>\"\n  },\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Invalid status value",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByStatus"
									],
									"query": [
										{
											"key": "status",
											"value": "available"
										},
										{
											"key": "status",
											"value": "available"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Finds Pets by tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.get(\"variable_key\");\r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "read:pets write:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/findByTags?tags=<string>&tags=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByTags"
							],
							"query": [
								{
									"key": "tags",
									"value": "<string>",
									"description": "(Required) Tags to filter by"
								},
								{
									"key": "tags",
									"value": "<string>",
									"description": "(Required) Tags to filter by"
								}
							]
						},
						"description": "MODULE 3 TASK 6"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/findByTags?tags=<string>&tags=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByTags"
									],
									"query": [
										{
											"key": "tags",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"<string>\"\n  },\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Invalid tag value",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/findByTags?tags=<string>&tags=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByTags"
									],
									"query": [
										{
											"key": "tags",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "https://www.getpostman.com/img/v2/logo-glyph.png",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.variables.get(\"variable_key\");\r",
									"pm.globals.get(\"variable_key\");\r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.getpostman.com/img/v2/logo-glyph.png",
							"protocol": "https",
							"host": [
								"www",
								"getpostman",
								"com"
							],
							"path": [
								"img",
								"v2",
								"logo-glyph.png"
							]
						},
						"description": "MODULE 3 TASK 6"
					},
					"response": []
				}
			]
		},
		{
			"name": "Finds Pets by tags",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.get(\"variable_key\");\r",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "scope",
							"value": "read:pets write:pets",
							"type": "string"
						},
						{
							"key": "authUrl",
							"value": "https://petstore.swagger.io/oauth/authorize",
							"type": "string"
						},
						{
							"key": "grant_type",
							"value": "implicit",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pet/findByTags?tags=<string>&tags=<string>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						"findByTags"
					],
					"query": [
						{
							"key": "tags",
							"value": "<string>",
							"description": "(Required) Tags to filter by"
						},
						{
							"key": "tags",
							"value": "<string>",
							"description": "(Required) Tags to filter by"
						}
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/findByTags?tags=<string>&tags=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByTags"
							],
							"query": [
								{
									"key": "tags",
									"value": "<string>"
								},
								{
									"key": "tags",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"<string>\"\n  },\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"<string>\"\n  }\n]"
				},
				{
					"name": "Invalid tag value",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/findByTags?tags=<string>&tags=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByTags"
							],
							"query": [
								{
									"key": "tags",
									"value": "<string>"
								},
								{
									"key": "tags",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "My assignment",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "api-key",
						"value": "591cfc0d6f9f439e82120e3997984477"
					}
				],
				"url": {
					"raw": "https://api.nytimes.com/svc/books/v3/lists.json?list=hardcover-nonfiction&published-date=2018-04-22&rank-last-week=4&rank=1",
					"protocol": "https",
					"host": [
						"api",
						"nytimes",
						"com"
					],
					"path": [
						"svc",
						"books",
						"v3",
						"lists.json"
					],
					"query": [
						{
							"key": "list",
							"value": "hardcover-nonfiction"
						},
						{
							"key": "published-date",
							"value": "2018-04-22"
						},
						{
							"key": "rank-last-week",
							"value": "4"
						},
						{
							"key": "rank",
							"value": "1"
						}
					]
				}
			},
			"response": []
		}
	]
}